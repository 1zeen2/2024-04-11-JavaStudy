package com.sist.util;
/*
 * 	컬렉션(Collection)
 * 		=> 데이터가 많은 경우에 처리를 쉽고 효율적으로 관리 가능하게 만드는 자료구조
 * 			=> 라이브러리 => 표준봐 (모든 개발자가 같은 코딩으로 사용)
 * 	
 * 			=> 자료구조 : CRUD
 * 			=> 배열은 고정적이다 => 선언과 동시에 저장 개수를 지정(추가, 삭제가 불가능)
 * 		       --------------- 추가 => 큰 배열을 다시 만들어야 한다.
 * 			   --------------- 삭제 => 작은 배열로 다시 만들어야 한다.
 * 			   --------------- 보완 => (가변형) 자동 증가, 자동 축소
 * 						       --------------- 데이터 관리 => 사용법	
 * 				
 * 			=> 컬렉션의 구조
 * 										Collection
 * 											 |
 * 				 --------------------------------------------------------
 * 				 |							 |							|
 * 			   List
 * 			  일자배열
 * 			=> 데이터 중복 허용
 * 			=> 데이터 구분을 인덱스
 * 				(순서가 존재함)
 * 			*** 인덱스는 자동 추가
 * 				------ 자동 추가 
 * 				(0번부터 순서대로 당겨서)
 * 
 * 			=> 	구현된 클래스
 * 				------------
 * 				**  ArrayList
 * 					=>  데이터 베이스의 저장된 값을 지정 후 브라우저에 전송
 * 						-----------------------------------------------
 * 						웹 프로그램, Vector의 잔점 보완
 * 						비동기적인 방식 => 잡속 속도를 빠르게 계산
 * 						------------
 * 						단점 : 데이터가 순차적으로 저장이 안된다.
 * 							  -------------------------
 * 							  	=> 정쟝렬을 해서 저장 후 사용
 * 								=> 오라틀에서 정렬
 * 								   ----------- ORDER By no
 * 									= 데이터 검색 : 읽기(SESECT)
 * 									= 데이터 추가 : INSERT
 * 									= 데이터 검색 : UPDATt
 * 				
 * 
 *
 * 
 * 			Set : 인터페이스
 * 			 |
 * 			--- 구현된 클래스
 * 			HashSet : 중복 제거
 * 			TreeSet : 검색 속도가 빠르다 (binary search)
 * 				=> 자바 자체 프로그램 개발
 * 					=> 오라클 : 기능 (검색, 중복 제어하는 기능)
 * 						----  
 * 					=>  데이터 중복이 없다 => ArrayList에서 중복된 데이터를 제거
 * 				-------------- 이렇기 때문에 데이터만 가지고 검색이 가능하다.
 * 				=> 순서가 없다. (인덱스번호가 필요 없다.)
 * 
 * 
 * 	
 */
public class 컬렉션_1 {

	public static void main(String[] args) {

	}

}
