
/*
 * 	자바 => Application / Web / Mobile
 * 
 * 	개발 방법
 * 	-------
 * 		데이터 저장 =======>	데이터 가공(사용자 요청) =======> 화면에 출력  | 코틀린, 스위프트 이용
 * 		--------			------------------			브라우저 / 모바일 |			|
 * 							명령문을 모아서 관리				| 자바	 	  |			|
 * 							= 사용자 입력 부분				=> Web		  -----------
 * 							= 사용자 요청 처리 부분			=> HTML 		Dart 언어
 * 							= 결과 값 도출					   Css				|
 * 							------------------		    Java Script		Flutter
 * 							1) 재사용 가능									React Native
 * 							2) 유지보수가 편하다
 * 							------------------
 * 							메서드	(*******)
 * 							게시판
 * 							= 목록 출력 기능 => 묶는다
 * 							= 글쓰기
 * 							= 상세 보기
 * 							= 삭제
 * 							= 수정
 * 							= 검색
 * 							=> order가 요청
 * 							= 댓글형 게시판
 * 							게시판 => 상속 받아서 처리 => 댓글 추가
 * 									 => 재사용 (유지보수)
 * 							------------------
 * 							=> 변수 / 메서드 => 클래스
 * 		한 개 저장	 	: 변수
 * 		여러 개 저장	: 배열
 * 		** 배열 (4장)
 * 			=> 일차원 배열
 * 			=> 같은 데이터 여러개 모아서 관리 (한개 이름으로 처리)
 * 			=> 장점
 * 				변수 여러 개를 한 개의 이름으로 제어 가능 ==> 반복문 사용이 편리하다
 * 				연속적인 메모리 공간을 만든다
 * 				--------------- 인덱스 번호를 사용해서 처리한다
 * 			=> 단점
 * 				고정적이다 => 추가, 삭제하기가 어렵다 (큰 배열, 작은 배열)
 * 				같은 데이터 형만 모아서 관리할 수 있다
 * 				==> 보완을 하기 위해 가변형, 다른 데이터 형을 추가하여 모아서 관리 => 컬렉션 프로그램 - 12장 - )
 * 		** 클래스 (5장)
 * 			=> 다른 데이터를 여러개 모아서 관리 (한 개의 이름으로 처리가 가능하다)
 * 		** 변수 / 연산자 / 제어문 => 기본 문법
 * 		   ----------------- 모아서 관리
 * 		** 변수 => a1 ~ a100 => 최대값, 최소값
 * 				  if => 99개 필요
 * 		
 * 		** 변수 / 배열 / 클래스 => 메모리에 저장 : RAM에 저장했다가 프로그램 종료시 삭세
 * 		   ------------------------------
 * 			= 파일 => 파일 여러개를 모아서 사용하기 어렵다, 보안에 취약하다.
 * 			= RDBMS => 관계형 데이터 베이스 (15장)
 * 			= 파일 => table
 * 			============================================= 오라클 / MySQL / MS - SQL / MariaDB
 * 																 ------				--------
 * 																	|					|
 * 																	---------------------
 * 																	     | 무료 버전 |
 * 																	=> 3차 (MySQL / MariaDB)
 * 		개발 => 누가 잘 모아서 관리를 하느냐. 
 * 			   -------------- => 수정, 삭제, 추가가 쉽게 만드는 작업
 * 				=> 변수 + 연산자 + 제어문 => 기능별로 모아서 처리.  
 * 				=> 기능별로 모아서 사용 => 패키지
 * 				=> java.iom [
 * 				=: jacas.wjo
 * 				  																
 */

public class 배열_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}