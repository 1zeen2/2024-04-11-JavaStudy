/*
 *	1. 변수 선언
 *		1) 변수	:	한 개의 데이터를 저장하는 메모리 공간 이름
 *										---------	주소	=>	저장한 데이트롤 읽기 / 쓰기
 *					=>	데이터 변경이 가능
 *		2) 상수	:	한 개의 데이터를 저장하는 메모리 공간	 이름
 *					=>	데이터 변경이 불가능
 *					=>	변수와 상수의 구은 final의 유무
 *							 ----
 *						----	final	데이터 형 상수명 = 값	= 값을 고정(변경(x))
 *						데이터 형 변수 명 = 값	=>	변경 가능
 *		3) 리터럴	:	실제 저장된 값( 메모리 ) *
 *	2. 변수 명칭법	=> 식별자 =>	같은 곳에서 같은 이름의 변수는 사용이 불가능하다.
 *		=>	알파벳 , 한글로 시작
 *			(대소문자 구분)
 *			int 국어 , 영어 , 수학
 *			int kor , ent , math , Kor
 *		=>	숫자 사용 ( 뒤에 사용이 가능)
 *			int kor1 , kor2 , kor3 , ...
 *		=>	키워드는 사용할 수 없다.
 *			int , byte , long , boolean , char , ....
 *		=>	공백이 있으면 안된다
 *			int a b	(x) , int ab (o)
 *		=>	특수문자 사용이 가능
 *			_ , $ ==> 언더바의 위치는 상관 없다.
 *			_가 앞에 있는 경우는 임시 변수 => _temp	=>	정렬
 *		=>	클래스 , 변수 , 상수 , 메소드 , 인터페이스 , 추상 클래스 . 배열 ...;
 *	3. 데이터 형 ( 데이터 타입 ) , 기본형
 *		형식)
 *			데이터 타입 변수명;
 *			----------------------------
 *					정수 
 *						byte	=>	1byte	(사용하는 범위 : -128 ~ 127)
 *									사용처	:	파일 읽기 , 업로드 , 다운로드 , 네트워크 통신
 *						int		=>	가장 많이 사용하는 정수형 ( 디폴트 )
 *									사용처	:	모든 프로그램의 정수형이 필요한 경우
 *									=>	4byte ( 사용 범위 : -21억 4천 ~ 21억 4천)
 *						long	=>	데이터 수집 =>	라이브러리가 제작
 *									금융권 / 증권 / 영화 댓글 등에 사용
 *									8byte ==> 2^63
 *						bit	= byte
 *							=> 0이나 1만 저장하는 공간 8bit = 1byte
 *							---------------------------------
 *								l	l	l	l	l	l	l
 *								1(음수)
 *								0(양수)
 *							---------------------------------
 *							1	1	1	1	1	1	1	1		=>음수 중 가장 큰 수 (-128)
 *							0	1	1	1	1	1	1	1		=> 양수 중 가장 큰 수 (127)
 *				
 *			----------------------------
 *						논리	:	boolean	=>	true / false
 *								조건이 있는 경우에 사용
 *								=> 로그인 , 검색어 ...페이지 , 긍
 *								boolean	=> 	변수 설정
 *											blogin
 *											bCheck
 *								1byte (	0 = false , 1 = true )
 *								사용법
 *								boolean bCheck	=	false
 *			----------------------------
 *						문자	: char	=>	2byte	( 0 ~ 65535 )
 *							문자는 양수로만 되어잇다
 *							표현하는 문자가 많이 있다
 *							=>	Unicode	: 각 국의 언어를 사용할 수 있다
 *							=>	char는 문자 한 개만 저장이 가능	=>	' '
 *								여러개 저장	=>	""	=>	char(x)	,	char(x) , char배열 => String
 *							=>	char는 저장시에 해당 번호로 변경해서 저장
 *								'A'	==> 65
 *								'a' ==> 97
 *								'0' ==> 48
 *							=>	사용법
 *							 	char Fname '항;
 *							=>	char alpha
 *							=>	chars는 연산시에 정수형으로 져===ㅇㄷ              
 *				***	정수 표현법
 *					10	,	20 ===> 10진법
 *					010			==>	앞에 0이 붙음
 *					---		8진법
 *					0x11		==> 앞에 0x가 붙음
 *					----	16진법
 *					0b100		==>	앞에 0b가 붙음
 *					-----	2진법
 *                                                                                                                                                                           
 *			----------------------------
 *						실수	:	소수점
 *								float	=>	4byte	=>	소수점 6자리
 *								double	=>	8byte	=>	소수점 15자리
 *									l	=>	실수형의 default	=>	10.5
 *							= 10.5F(f)로 float형으로 표현 가능
 *			----------------------------
 *						참조형 :	데이터를 여러 개 한 번에 저장하는 방법. 배열	/	클래스
 *	4. 각 데이터 형별 사용법
 *	5. 연산 처리 => 제어
 *
 *		==01111111
 *		1) Change
 *			0->1
 *			1->0
 *			100000000
 *			+		1
 *			----------
 *			100000001	=>	2의 보수
 */
public class 변수_2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// 모든 숫자 => int
		System.out.println('A'+'B');
		System.out.println("A"+"B");
		System.out.println((int) 'A');
		System.out.println((int) 'B');
		System.out.println((int) '0');
		System.out.println((int) '+');
		System.out.println('A' + 'B');
		System.out.println(0x1010);
		System.out.println(16*16*16+16);
		
	float 	f = 10.5F;
	double	d = 10.5D;
	}
}